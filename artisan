#!/usr/bin/env php
<?php

define('LARAVEL_START', microtime(true));

/*
|--------------------------------------------------------------------------
| Register The Auto Loader
|--------------------------------------------------------------------------
|
| Composer provides a convenient, automatically generated class loader
| for our application. We just need to utilize it! We'll require it
| into the script here so that we do not have to worry about the
| loading of any our classes "manually". Feels great to relax.
|
*/

require __DIR__.'/vendor/autoload.php';

$input = new Symfony\Component\Console\Input\ArgvInput;
$output = new Symfony\Component\Console\Output\ConsoleOutput;

$stage = $input->getParameterOption('--stage');

if ($stage) {
    $lambda = new Aws\Lambda\LambdaClient([
        'version' => 'latest',
        'region' => 'eu-west-2',
    ]);
    $result = $lambda->invoke([
        'FunctionName' => 'serverless-laravel-ssr-' . $stage . '-hello',
        'Payload' => json_encode([
            'artisan' => trim(preg_replace('/--stage\s+[^\s]+($|\s)/', '', (string)$input)),
        ]),
    ]);

    $output->write(json_decode($result->toArray()['Payload']->getContents()));
    exit(0);
}

$app = require_once __DIR__.'/bootstrap/app.php';

/*
|--------------------------------------------------------------------------
| Run The Artisan Application
|--------------------------------------------------------------------------
|
| When we run the console application, the current CLI command will be
| executed in this console and the response sent back to a terminal
| or another output device for the developers. Here goes nothing!
|
*/

$kernel = $app->make(Illuminate\Contracts\Console\Kernel::class);

$status = $kernel->handle(
    $input,
    $output
);

/*
|--------------------------------------------------------------------------
| Shutdown The Application
|--------------------------------------------------------------------------
|
| Once Artisan has finished running, we will fire off the shutdown events
| so that any final work may be done by the application before we shut
| down the process. This is the last thing to happen to the request.
|
*/

$kernel->terminate($input, $status);

exit($status);
